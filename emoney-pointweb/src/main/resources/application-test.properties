server.port=8080
#shardingsphere\u914D\u7F6E
spring.shardingsphere.datasource.names=db0,db1
#\u4E3B\u5E93
spring.shardingsphere.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db0.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.shardingsphere.datasource.db0.jdbc-url=jdbc:sqlserver://192.168.42.79:1433;DatabaseName=pointprod
spring.shardingsphere.datasource.db0.username=sa
spring.shardingsphere.datasource.db0.password=1qaz=[.
spring.shardingsphere.datasource.db0.minimum-idle=10
spring.shardingsphere.datasource.db0.maximum-pool-size=50
spring.shardingsphere.datasource.db0.auto-commit=true
spring.shardingsphere.datasource.db0.idle-timeout=30000
spring.shardingsphere.datasource.db0.pool-name=PointProd0HikariCP
spring.shardingsphere.datasource.db0.max-lifetime=1800000
spring.shardingsphere.datasource.db0.connection-timeout=30000
spring.shardingsphere.datasource.db0.connection-test-query=SELECT 1
#\u4ECE\u5E93
spring.shardingsphere.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.shardingsphere.datasource.db1.jdbc-url=jdbc:sqlserver://192.168.42.79:1433;DatabaseName=pointprod
spring.shardingsphere.datasource.db1.username=sa
spring.shardingsphere.datasource.db1.password=1qaz=[.
spring.shardingsphere.datasource.db1.minimum-idle=10
spring.shardingsphere.datasource.db1.maximum-pool-size=50
spring.shardingsphere.datasource.db1.auto-commit=true
spring.shardingsphere.datasource.db1.idle-timeout=30000
spring.shardingsphere.datasource.db1.pool-name=PointProd1HikariCP
spring.shardingsphere.datasource.db1.max-lifetime=1800000
spring.shardingsphere.datasource.db1.connection-timeout=30000
spring.shardingsphere.datasource.db1.connection-test-query=SELECT 1
#t_point_record\u5206\u8868
spring.shardingsphere.sharding.tables.t_point_record.actual-data-nodes=ds0.t_point_record$->{0..31}
spring.shardingsphere.sharding.tables.t_point_record.table-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.tables.t_point_record.table-strategy.inline.algorithm-expression=t_point_record$->{uid % 32}
#_signin_record\u5206\u8868
spring.shardingsphere.sharding.tables.t_signin_record.actual-data-nodes=ds0.t_signin_record$->{0..31}
spring.shardingsphere.sharding.tables.t_signin_record.table-strategy.inline.sharding-column=uid
spring.shardingsphere.sharding.tables.t_signin_record.table-strategy.inline.algorithm-expression=t_signin_record$->{uid % 32}
# \u8BFB\u5199\u5206\u79BB
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=db0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=db1
## \u4ECE\u5E93\u8D1F\u8F7D\u5747\u8861
spring.shardingsphere.sharding.master-slave-rules.ds0.load-balance-algorithm-type=round_robin
#\u662F\u5426\u663E\u793Asql
spring.shardingsphere.props.sql.show=false
#pagehelper\u63D2\u4EF6\u914D\u7F6E
pagehelper.reasonable=false
pagehelper.support-methods-arguments=true
pagehelper.helper-dialect=sqlserver
pagehelper.params=count=countsql
#mybatis\u914D\u7F6E
mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mybatis/mapper/*.xml
mybatis.type-aliases-package=com.emoney.pointweb.repository.dao.entity
### resources
spring.mvc.servlet.load-on-startup=0
spring.mvc.static-path-pattern=/static/**
spring.resources.static-locations=classpath:/static/
### freemarker
spring.freemarker.templateLoaderPath=classpath:/templates/
spring.freemarker.suffix=.ftl
spring.freemarker.charset=UTF-8
spring.freemarker.request-context-attribute=request
spring.freemarker.settings.number_format=0.##########
#redis \u5355\u5B9E\u4F8B\u591A\u6570\u636E\u6E90\u4EE5\u53CAlettuce\u8FDE\u63A5\u6C60\u914D\u7F6E
spring.redis.lettuce.pool.maxTotal=50
spring.redis.lettuce.pool.maxWaitMillis=-1
spring.redis.lettuce.pool.maxIdle=8
spring.redis.lettuce.pool.minIdle=0
#redis1
spring.redis1.database=0
spring.redis1.hostName=192.168.8.175
spring.redis1.port=6479
spring.redis1.password=
spring.redis1.timeout=600
#kafka\u914D\u7F6E
spring.kafka.bootstrap-servers=192.168.42.172:9092,192.168.42.173:9092,192.168.42.174:9092
# \u53D1\u751F\u9519\u8BEF\u540E\uFF0C\u6D88\u606F\u91CD\u53D1\u7684\u6B21\u6570\u3002
spring.kafka.producer.retries=0
#\u5F53\u6709\u591A\u4E2A\u6D88\u606F\u9700\u8981\u88AB\u53D1\u9001\u5230\u540C\u4E00\u4E2A\u5206\u533A\u65F6\uFF0C\u751F\u4EA7\u8005\u4F1A\u628A\u5B83\u4EEC\u653E\u5728\u540C\u4E00\u4E2A\u6279\u6B21\u91CC\u3002\u8BE5\u53C2\u6570\u6307\u5B9A\u4E86\u4E00\u4E2A\u6279\u6B21\u53EF\u4EE5\u4F7F\u7528\u7684\u5185\u5B58\u5927\u5C0F\uFF0C\u6309\u7167\u5B57\u8282\u6570\u8BA1\u7B97\u3002
spring.kafka.producer.batch-size=16384
# \u8BBE\u7F6E\u751F\u4EA7\u8005\u5185\u5B58\u7F13\u51B2\u533A\u7684\u5927\u5C0F\u3002
spring.kafka.producer.buffer-memory=33554432
# \u6BCF\u4E2ABatch\u8981\u5B58\u653Ebatch.size\u5927\u5C0F\u7684\u6570\u636E\u540E\uFF0C\u624D\u53EF\u4EE5\u53D1\u9001\u51FA\u53BB
spring.kafka.producer.linger.ms=0
# \u952E\u7684\u5E8F\u5217\u5316\u65B9\u5F0F
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# \u503C\u7684\u5E8F\u5217\u5316\u65B9\u5F0F
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
# acks=0 \uFF1A \u751F\u4EA7\u8005\u5728\u6210\u529F\u5199\u5165\u6D88\u606F\u4E4B\u524D\u4E0D\u4F1A\u7B49\u5F85\u4EFB\u4F55\u6765\u81EA\u670D\u52A1\u5668\u7684\u54CD\u5E94\u3002
# acks=1 \uFF1A \u53EA\u8981\u96C6\u7FA4\u7684\u9996\u9886\u8282\u70B9\u6536\u5230\u6D88\u606F\uFF0C\u751F\u4EA7\u8005\u5C31\u4F1A\u6536\u5230\u4E00\u4E2A\u6765\u81EA\u670D\u52A1\u5668\u6210\u529F\u54CD\u5E94\u3002
# acks=all \uFF1A\u53EA\u6709\u5F53\u6240\u6709\u53C2\u4E0E\u590D\u5236\u7684\u8282\u70B9\u5168\u90E8\u6536\u5230\u6D88\u606F\u65F6\uFF0C\u751F\u4EA7\u8005\u624D\u4F1A\u6536\u5230\u4E00\u4E2A\u6765\u81EA\u670D\u52A1\u5668\u7684\u6210\u529F\u54CD\u5E94\u3002
spring.kafka.producer.acks=1
# \u81EA\u52A8\u63D0\u4EA4\u7684\u65F6\u95F4\u95F4\u9694
spring.kafka.consumer.auto-commit-interval=100
# \u8BE5\u5C5E\u6027\u6307\u5B9A\u4E86\u6D88\u8D39\u8005\u5728\u8BFB\u53D6\u4E00\u4E2A\u6CA1\u6709\u504F\u79FB\u91CF\u7684\u5206\u533A\u6216\u8005\u504F\u79FB\u91CF\u65E0\u6548\u7684\u60C5\u51B5\u4E0B\u8BE5\u4F5C\u4F55\u5904\u7406\uFF1A
# latest\uFF08\u9ED8\u8BA4\u503C\uFF09\u5728\u504F\u79FB\u91CF\u65E0\u6548\u7684\u60C5\u51B5\u4E0B\uFF0C\u6D88\u8D39\u8005\u5C06\u4ECE\u6700\u65B0\u7684\u8BB0\u5F55\u5F00\u59CB\u8BFB\u53D6\u6570\u636E\uFF08\u5728\u6D88\u8D39\u8005\u542F\u52A8\u4E4B\u540E\u751F\u6210\u7684\u8BB0\u5F55\uFF09
# earliest \uFF1A\u5728\u504F\u79FB\u91CF\u65E0\u6548\u7684\u60C5\u51B5\u4E0B\uFF0C\u6D88\u8D39\u8005\u5C06\u4ECE\u8D77\u59CB\u4F4D\u7F6E\u8BFB\u53D6\u5206\u533A\u7684\u8BB0\u5F55
spring.kafka.consumer.auto-offset-reset=latest
# \u662F\u5426\u81EA\u52A8\u63D0\u4EA4\u504F\u79FB\u91CF\uFF0C\u9ED8\u8BA4\u503C\u662Ftrue,\u4E3A\u4E86\u907F\u514D\u51FA\u73B0\u91CD\u590D\u6570\u636E\u548C\u6570\u636E\u4E22\u5931\uFF0C\u53EF\u4EE5\u628A\u5B83\u8BBE\u7F6E\u4E3Afalse,\u7136\u540E\u624B\u52A8\u63D0\u4EA4\u504F\u79FB\u91CF
spring.kafka.consumer.enable-auto-commit=false
# \u6BCF\u6B21\u6700\u5927\u6D88\u8D39\u6D88\u606F\u6570\u91CF
spring.kafka.consumer.max-poll-records=50
# \u952E\u7684\u53CD\u5E8F\u5217\u5316\u65B9\u5F0F
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# \u503C\u7684\u53CD\u5E8F\u5217\u5316\u65B9\u5F0F
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
# \u6D88\u8D39\u4F1A\u8BDD\u8D85\u65F6\u65F6\u95F4(\u8D85\u8FC7\u8FD9\u4E2A\u65F6\u95F4consumer\u6CA1\u6709\u53D1\u9001\u5FC3\u8DF3,\u5C31\u4F1A\u89E6\u53D1rebalance\u64CD\u4F5C)
spring.kafka.consumer.session.timeout.ms=120000
# \u6D88\u8D39\u8BF7\u6C42\u8D85\u65F6\u65F6\u95F4
spring.kafka.consumer.request.timeout.ms=180000
#\u6D88\u8D39\u5206\u7EC4
spring.kafka.consumer.topic.group.id=pointrecordgroup
# \u5728\u4FA6\u542C\u5668\u5BB9\u5668\u4E2D\u8FD0\u884C\u7684\u7EBF\u7A0B\u6570\u3002
spring.kafka.listener.concurrency=6
#listner\u8D1F\u8D23ack\uFF0C\u6BCF\u8C03\u7528\u4E00\u6B21\uFF0C\u5C31\u7ACB\u5373commit
spring.kafka.listener.ack-mode=manual_immediate
# \u8BBE\u7F6E\u6279\u91CF\u6D88\u8D39
# spring.kafka.listener.type=batch
# \u6279\u91CF\u6D88\u8D39\u6BCF\u6B21\u6700\u591A\u6D88\u8D39\u591A\u5C11\u6761\u6D88\u606F
# spring.kafka.consumer.max-poll-records=50
# \u6D88\u8D39\u7AEF\u76D1\u542C\u7684topic\u4E0D\u5B58\u5728\u65F6\uFF0C\u9879\u76EE\u542F\u52A8\u4F1A\u62A5\u9519(\u5173\u6389)
spring.kafka.listener.missing-topics-fatal=false
pointrecord.topic=pointrecordadd
signinrecord.topic=signinrecordadd
#elasticsearch\u914D\u7F6E
spring.elasticsearch.rest.uris=192.168.42.172:9200,192.168.42.173:9200,192.168.42.174:9200
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
#ds\u8BBF\u95EEurl
dsapiurl=http://ds.emoney.cn
#\u4E0A\u4F20\u6587\u4EF6\u63A5\u53E3
fileurl=http://cmsservice.emoney.cn/comm/fileuploadEdf.ashx
#\u540E\u53F0\u901A\u884C\u8BC1\u8BBF\u95EE\u63A5\u53E3
getuserinfourl=http://adminds.emoney.cn:83/AdminPassport/api/Safe.GetUserInfo?appid=10199&PassportId={0}
checkticketurl=http://adminds.emoney.cn:83/AdminPassport/api/Ticket.ValidateClientTicket?appid=10199&ticket={0}
#\u540E\u53F0\u767B\u5F55\u94FE\u63A5
loginurl=http://adminds.emoney.cn:83/AdminUserCenter/Login/Index?appUrl=http://{0}:{1}/login&FromApp=10199
#\u5185\u90E8\u7F51\u5173
insideGatewayUrl=http://192.168.240.68:8105
#\u6D88\u606F\u901A\u77E5url
swscUrl=http://swsc.emoney.cn
#webApiUrl
webApiUrl=http://webapi.emoney.cn
#\u79EF\u5206\u524D\u53F0url
pointfront.url=http://test.point.emoney.cn
#WebApiEncryptKey
apiencryptkey=c049f2a1-58aa-4855-bb4a-31286aa7fda3
logisticsOrderTaskId=1390581139592318976
#\u90AE\u4EF6\u914D\u7F6E
spring.mail.host=smtp.emoney.cn
spring.mail.port=25
spring.mail.protocol=smtp
spring.mail.username=webalarm@emoney.cn
spring.mail.password=8Zrhe@WdIm
spring.mail.default-encoding=UTF-8
spring.mail.properties.mail.stmp.socketFactory.class=javax.net.ssl.SSLSocketFactory
mail.fromMail.addr=webalarm@emoney.cn
mail.toMail.addr=xueqiuyun@emoney.cn,lixiaojuan@emoney.cn,meixiaohu@emoney.cn,zhujunjie0912@emoney.cn,lipengcheng@emoney.cn
### xxl-job admin address list, such as "http://address" or "http://address01,http://address02"
xxl.job.admin.addresses=http://192.168.42.91:8081/xxl-job-admin
### xxl-job, access token
xxl.job.accessToken=
### xxl-job executor appname
xxl.job.executor.appname=pointprodjobexecutor
### xxl-job executor registry-address: default use address to registry , otherwise use ip:port if address is null
xxl.job.executor.address=http://192.168.240.70:9151
### xxl-job executor server-info
xxl.job.executor.ip=
xxl.job.executor.port=8081
### xxl-job executor log-path
xxl.job.executor.logpath=/data/applogs/xxl-job/jobhandler
### xxl-job executor log-retention-days
xxl.job.executor.logretentiondays=30
#logstash
logstash.url=192.168.42.172:4569
