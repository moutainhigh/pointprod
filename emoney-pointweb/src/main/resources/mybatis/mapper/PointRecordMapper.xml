<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emoney.pointweb.repository.dao.mapper.PointRecordMapper">
    <resultMap id="BaseResultMap" type="com.emoney.pointweb.repository.dao.entity.PointRecordDO">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="task_id" property="taskId" jdbcType="BIGINT"/>
        <result column="platform" property="platform" jdbcType="INTEGER"/>
        <result column="task_point" property="taskPoint" jdbcType="FLOAT"/>
        <result column="task_name" property="taskName" jdbcType="VARCHAR"/>
        <result column="point_status" property="pointStatus" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="VARCHAR"/>
        <result column="em_no" property="emNo" jdbcType="VARCHAR"/>
        <result column="is_dailytask" property="isDailytask" jdbcType="BOOLEAN"/>
        <result column="sub_id" property="subId" jdbcType="VARCHAR"/>
         <result column="expiration_time" property="expirationTime" jdbcType="TIMESTAMP"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

     <resultMap id="SummaryResultMap" type="com.emoney.pointweb.repository.dao.entity.PointRecordSummaryDO">
        <result column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="point_status" property="pointStatus" jdbcType="INTEGER"/>
        <result column="point_total" property="pointTotal" jdbcType="FLOAT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, uid, task_id, platform, task_point,task_name,point_status,pid,em_no,is_dailytask,sub_id,expiration_time,create_time,update_time,create_by,update_by,remark
    </sql>
    <select id="getById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_point_record
        WHERE uid=#{uid} AND id=#{id}
    </select>
        <select id="getPointRecordSummaryByUid" resultMap="SummaryResultMap">
        SELECT uid,sum(task_point) as point_total,point_status
        FROM t_point_record
        WHERE uid=#{uid}
        GROUP BY uid,point_status
    </select>

            <select id="getPointRecordSummaryByUidAndCreateTime" resultMap="SummaryResultMap">
        SELECT uid,sum(task_point) as point_total,point_status
        FROM t_point_record
        WHERE uid=#{uid} AND create_time &gt;=  #{dtStart} AND create_time  &lt;= #{dtEnd}
        GROUP BY uid,point_status
    </select>


    <insert id="insert" parameterType="com.emoney.pointweb.repository.dao.entity.PointRecordDO">
       INSERT INTO
       		t_point_record
       		(id, uid, task_id, platform, task_point,task_name,point_status,pid,em_no,is_dailytask,sub_id,create_time,expiration_time,update_time,create_by,update_by,remark)
       	VALUES
       		(#{id},#{uid}, #{taskId}, #{platform}, #{taskPoint},#{taskName},#{pointStatus},#{pid},#{emNo},#{isDailytask},#{subId},#{expirationTime},#{createTime}, #{updateTime}, #{createBy}, #{updateBy},#{remark})
    </insert>


    <select id="getByPager" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_point_record
        WHERE uid=#{uid} AND point_status <![CDATA[!= ]]>4
           <if test="pointStatus != -1 ">
          AND point_status = #{pointStatus}
        </if>
         <if test="startDate != null ">
          AND create_time &gt;= #{startDate}
        </if>
           <if test="endDate != null ">
         AND create_time &lt; #{endDate}
        </if>

        order by create_time desc
    </select>

    <select id="getByUid1" resultMap="BaseResultMap">

        SELECT

        <include refid="Base_Column_List"/>

        FROM t_point_record
        WHERE uid=#{uid} AND is_dailytask=0 AND point_status IN (1,2)


    </select>

        <select id="getByUid2" resultMap="BaseResultMap">

        SELECT
        <include refid="Base_Column_List"/>

        FROM t_point_record
        WHERE uid=#{uid} and is_dailytask=1 and create_time &gt;= #{startDate} and create_time &lt; #{endDate} AND point_status IN (1,2)

    </select>

      <select id="getUnClaimRecordsByUid" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>

        FROM t_point_record
        WHERE uid=#{uid} and point_status=1 order by create_time desc

    </select>

     <select id="getPointRecordByTaskIds" parameterType="java.util.HashMap" resultMap="BaseResultMap">
        select *
        from t_point_record
        <where>
           uid=#{uid} and task_id in
          	<foreach item="item" index="index" collection="list"
				 open="(" separator="," close=")">
			#{item}
		</foreach>
        </where>
    </select>

     <update id="update" parameterType="com.emoney.pointweb.repository.dao.entity.PointRecordDO">
    update t_point_record
    <set>
       <if test="taskId != null">
        task_id = #{taskId,jdbcType=BIGINT},
      </if>
        <if test="platform != null">
        platform = #{platform,jdbcType=INTEGER},
      </if>
        <if test="taskPoint != null">
        task_point = #{taskPoint,jdbcType=FLOAT},
      </if>
         <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
         <if test="pointStatus != null">
        point_status = #{pointStatus,jdbcType=INTEGER},
      </if>
         <if test="pid != null">
        pid = #{pid,jdbcType=VARCHAR},
      </if>
        <if test="emNo != null">
        em_no = #{emNo,jdbcType=VARCHAR},
      </if>
         <if test="isDailytask != null">
        is_dailytask = #{isDailytask,jdbcType=BOOLEAN},
      </if>
          <if test="subId != null">
        sub_id = #{subId,jdbcType=VARCHAR},
      </if>
       <if test="expirationTime != null">
        expiration_time = #{expirationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
       <if test="createBy != null">
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
       <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
       <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>



