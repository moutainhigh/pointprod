<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.emoney.pointweb.repository.dao.mapper.PointMessageMapper">
    <resultMap id="BaseResultMap" type="com.emoney.pointweb.repository.dao.entity.PointMessageDO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="uid" property="uid" jdbcType="BIGINT"/>
        <result column="msg_type" property="msgType" jdbcType="INTEGER"/>
        <result column="msg_content" property="msgContent" jdbcType="VARCHAR"/>
        <result column="msg_src" property="msgSrc" jdbcType="VARCHAR"/>
         <result column="msg_ext" property="msgExt" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">



        id,uid, msg_type, msg_content,msg_src,msg_ext, create_time,update_time,create_by,update_by,remark



    </sql>

    <insert id="insert" parameterType="com.emoney.pointweb.repository.dao.entity.PointMessageDO" useGeneratedKeys="true"
            keyProperty="id">


       INSERT INTO
       		t_point_message
       		(uid,msg_type, msg_content,msg_src,msg_ext, create_time,update_time,create_by,update_by,remark)
       	VALUES
       		(#{uid}, #{msgType}, #{msgContent}, #{msgSrc},#{msgExt},#{createTime}, #{updateTime}, #{createBy}, #{updateBy},#{remark})



    </insert>


       <update id="update" parameterType="com.emoney.pointweb.repository.dao.entity.PointMessageDO">
        UPDATE t_point_message
        <set>
            <if test="uid != null">
                uid = #{uid},
            </if>
            <if test="msgType != null">
                msg_type = #{msgType},
            </if>
            <if test="msgContent != null">
                msg_content = #{msgContent},
            </if>
            <if test="msgSrc != null">
                msg_src = #{msgSrc},
            </if>
            <if test="msgExt != null">
                msg_ext = #{msgExt},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
        </set>
        WHERE id = #{id}
    </update>


    <select id="getByUid" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM t_point_message
         WHERE uid=#{uid}  AND create_time>#{endDate}  order by create_time desc
    </select>

    <select id="getByUidAndExt" resultMap="BaseResultMap">

        SELECT
          <include refid="Base_Column_List"/>
        FROM t_point_message
         WHERE uid=#{uid} AND msg_ext = #{msgExt}

    </select>
</mapper>



